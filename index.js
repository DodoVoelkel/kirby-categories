(function(){"use strict";var f=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("k-field",e._b({staticClass:"k-categories-field"},"k-field",e.$props,!1),[t("template",{slot:"options"},[e.canAdd?t("k-button",{attrs:{id:e._uid,icon:"add"},on:{click:e.addCategory}},[e._v(" "+e._s(e.$t("add"))+" ")]):e._e()],1),e.isEmpty?t("k-empty",{attrs:{icon:"tag"},on:{click:e.addCategory}},[e._v(" "+e._s(e.empty)+" ")]):t("div",{staticClass:"k-categories-table"},[t("div",{staticClass:"k-categories-header"},[e._l(e.sortedLanguages,function(a){return t("div",{key:a.code,class:[{disabled:!e.isCurrent(a)},"language"],on:{click:function(l){return e.changeLanguage(a)}}},[e._v(" "+e._s(a.name)+" ")])}),t("div",{staticClass:"delete-placeholder"})],2),t("k-draggable",{staticClass:"k-categories-list",attrs:{list:e.localValue,handle:!0,element:"ul"},on:{end:e.onInput}},e._l(e.localValue,function(a,l){return t("li",{staticClass:"k-categories-item"},[t("k-sort-handle"),e._l(e.sortedLanguages,function(r,u){return t("div",{key:r.code,class:["language",{"has-input":e.isCurrent(r)}]},[e.isCurrent(r)?t("k-input",{ref:a.id,refInFor:!0,attrs:{type:"text",id:a.id,theme:"field",value:a.text},on:{input:function(h){return e.onTextInput(l,h)}}}):t("div",{staticClass:"disabled"},[e._v(e._s(a.translations[r.code]))])],1)}),t("k-button",{attrs:{icon:"trash"},on:{click:function(r){return e.removeCategory(a.id)}}})],2)}),0)],1)],2)},_=[],k="";function p(e,n,t,a,l,r,u,h){var s=typeof e=="function"?e.options:e;n&&(s.render=n,s.staticRenderFns=t,s._compiled=!0),a&&(s.functional=!0),r&&(s._scopeId="data-v-"+r);var o;if(u?(o=function(i){i=i||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,!i&&typeof __VUE_SSR_CONTEXT__!="undefined"&&(i=__VUE_SSR_CONTEXT__),l&&l.call(this,i),i&&i._registeredComponents&&i._registeredComponents.add(u)},s._ssrRegister=o):l&&(o=h?function(){l.call(this,(s.functional?this.parent:this).$root.$options.shadowRoot)}:l),o)if(s.functional){s._injectStyles=o;var I=s.render;s.render=function($,g){return o.call(g),I($,g)}}else{var c=s.beforeCreate;s.beforeCreate=c?[].concat(c,o):[o]}return{exports:e,options:s}}const v={props:{default:[String,Boolean],defaultFirst:Boolean,limit:Number,prefix:String,label:String,disabled:Boolean,help:String,parent:String,empty:String,value:[Array],name:[String,Number],required:Boolean,type:String},data(){return{localValue:this.value}},watch:{value:function(e){this.localValue!==e&&(this.localValue=e)}},computed:{languages(){return this.$store.state.languages?this.$store.state.languages.all:this.$languages},sortedLanguages(){if(!this.defaultFirst)return this.languages;let e=this.languages.find(t=>t.default==!0),n=this.languages.filter(t=>t.default!==!0);return n.unshift(e),n},currentLanguage(){return this.$store.state.languages?this.$store.state.languages.current:this.$language},currentCode(){return this.currentLanguage.code},exists(){return this.localValue&&this.localValue.length},isEmpty(){return!this.exists||!this.localValue.length},canAdd(){return!this.limit||!this.localValue||!this.localValue.length||this.localValue.length<this.limit},highestIndex(){return this.exists?this.localValue[0].highestIndex:0},newIndex(){return this.highestIndex+1}},methods:{isCurrent(e){return e.code==this.currentCode},addCategory(){let e=this.prefix+this.newIndex,n={id:e,panelIndex:this.newIndex,highestIndex:this.newIndex,text:"",translations:{}};this.languages.forEach(t=>{n.translations[t.code]=""}),this.exists?(this.localValue=[n].concat(this.localValue),this.syncHighestIndex()):this.localValue=[n],this.onInput(),this.$nextTick(()=>{let t=this.$refs[e];t&&t[0].focus()})},removeCategory(e){this.localValue=this.localValue.filter(n=>n.id!==e),this.onInput()},syncHighestIndex(){let e=Math.max.apply(Math,this.localValue.map(n=>n.panelIndex));this.localValue=this.localValue.map(function(n){return n.highestIndex=e,n})},onTextInput(e=!1,n){this.localValue[e].text=n,this.localValue[e].translations[this.currentCode]=n,this.onInput()},onInput(){this.$emit("input",this.localValue)},changeLanguage(e){this.$emit("change",e),this.$go(this.$view.path,{query:{language:e.code}})}}},d={};var m=p(v,f,_,!1,C,null,null,null);function C(e){for(let n in d)this[n]=d[n]}var V=function(){return m.exports}();panel.plugin("sylvainjule/categories",{fields:{categories:V}})})();
